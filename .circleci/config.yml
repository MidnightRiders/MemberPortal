version: 2.0
jobs:
  build:
    parallelism: 3
    docker:
      - image: circleci/ruby:2.7.5-node-browsers
        environment:
          COVERAGE: true
          BUNDLE_PATH: vendor/bundle
          PGHOST: 127.0.0.1
          PGUSER: mr-member-portal-test-user
          RAILS_ENV: test
      - image: cimg/postgres:11.17
        environment:
          POSTGRES_USER: mr-member-portal-test-user
          POSTGRES_DB: mr_member_portal_test
    steps:
      - checkout
      - run:
          name: Install legacy Bundler # Required for Rails 4.2
          command: gem install bundler:1.17.3
      - restore_cache:
          keys:
            - rails-demo-bundle-v2-{{ checksum "Gemfile.lock" }}
            - rails-demo-bundle-v2-
      - run:
          name: Bundle Install
          command: bundle check --path vendor/bundle || bundle install --deployment
      - save_cache:
          key: rails-demo-bundle-v2-{{ checksum "Gemfile.lock" }}
          paths:
            - vendor/bundle

      - run:
          name: Wait for DB
          command: dockerize -wait tcp://localhost:5432 -timeout 1m

      - run:
          name: Setup Code Climate test-reporter
          command: |
            curl -L https://codeclimate.com/downloads/test-reporter/test-reporter-latest-linux-amd64 > ./cc-test-reporter
            chmod +x ./cc-test-reporter

      - run:
          name: Database setup
          command: bundle exec rake db:schema:load --trace
      - run:
          name: Run rspec in parallel
          command: |
            mkdir -p test-results test-artifacts
            ./cc-test-reporter before-build
            bundle exec rspec --profile 10 \
                              --color \
                              --order random \
                              --format RspecJunitFormatter \
                              --out test-results/rspec.xml \
                              --format documentation \
                              -- $(circleci tests glob "spec/**/*_spec.rb" | circleci tests split --split-by=timings)
      - store_test_results:
          path: test-results
      - store_artifacts:
          path: test-artifacts

      - run:
          name: Format CodeClimate Test Coverge
          command: |
            ./cc-test-reporter format-coverage -t simplecov -o "coverage/codeclimate.$CIRCLE_NODE_INDEX.json"
      - persist_to_workspace:
          root: coverage
          paths:
            - codeclimate.*.json
  upload-coverage:
    docker:
      - image: circleci/ruby:2.7.5-node
    environment:
      CC_TEST_REPORTER_ID: c3ff91e23ea0fea718bb62dae0a8a5440dc082d5d2bb508af6b33d0babac479a
    working_directory: ~/bikeindex/bike_index

    steps:
      - attach_workspace:
          at: ~/bikeindex/bike_index
      - run:
          name: Install Code Climate Test Reporter
          command: |
            curl -L https://codeclimate.com/downloads/test-reporter/test-reporter-latest-linux-amd64 > ./cc-test-reporter
            chmod +x ./cc-test-reporter
      - run:
          command: |
            ./cc-test-reporter sum-coverage --output - codeclimate.*.json | ./cc-test-reporter upload-coverage --debug --input -

workflows:
  version: 2

  commit:
    jobs:
      - build
      - upload-coverage:
          requires:
             - build

