version: 2
jobs:
  build:
    working_directory: ~/MemberPortal
    docker:
      - image: circleci/ruby:2.3.7-jessie-node
        environment:
          BUNDLE_PATH: vendor/bundle
          LD_LIBRARY_PATH: /usr/local/lib64/
          RAILS_ENV: test
          PGHOST: 127.0.0.1
          PGUSER: root
      - image: circleci/postgres:9.5-alpine
        environment:
          POSTGRES_DB: MLS_Pick_Em_test
          POSTGRES_USER: root
          POSTGRES_PASSWORD: ""
    steps:
      - checkout
      - restore_cache:
          key: phantomjs-2-1-1
      - run:
          name: Install PhantomJS Dependencies
          command: |
            [ -f /usr/local/bin/phantomjs ] || apt-get update
            [ -f /usr/local/bin/phantomjs ] || apt-get install -y fontconfig wget
      - run:
          name: Install PhantomJS
          command: |
            [ -f /usr/local/bin/phantomjs ] || wget -O /tmp/phantomjs.tar.bz2 https://bitbucket.org/ariya/phantomjs/downloads/phantomjs-2.1.1-linux-x86_64.tar.bz2
            [ -f /usr/local/bin/phantomjs ] || tar -xjf /tmp/phantomjs.tar.bz2 -C /tmp
            [ -f /usr/local/bin/phantomjs ] || mv /tmp/phantomjs-2.1.1-linux-x86_64/bin/phantomjs /usr/local/bin/phantomjs
      - save_cache:
          key: phantomjs-2-1-1
          paths:
            - /usr/local/bin/phantomjs
      # - restore_cache:
      #     keys:
      #       - mr-member-portal-bundle-v2-{{ checksum "Gemfile.lock" }}
      #       - mr-member-portal-bundle-v2-
      - run:
          name: Bundle Install
          command: bundle check || bundle install
      # - save_cache:
      #     key: mr-member-portal-bundle-v2-{{ checksum "Gemfile.lock" }}
      #     paths:
      #       - vendor/bundle
      - run:
          name: Wait for DB
          command: dockerize -wait tcp://localhost:5432 -timeout 1m
      - run:
          name: Migrate
          command: bundle exec rake db:create db:schema:load db:migrate
      - run:
          name: Run Tests
          command: bundle exec rspec
      - store_test_results:
          path: test_results
      - run:
          name: Report Coverage to CodeClimate
          command: bundle exec codeclimate-test-reporter "$CIRCLE_ARTIFACTS/coverage/.resultset.json"

