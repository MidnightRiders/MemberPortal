scalar DateTime
scalar Time
scalar Null

type Query {
  user(ulid: ID!): User
  users: [User!]
  membership(ulid: ID, userULID: ID, year: Int): Membership
  memberships(userULID: ID, year: Int): [Membership!]

  club(ulid: ID!): Club
  clubs(conference: Conference): [Club!]
  match(ulid: ID!): Match
  matches(before: Time, after: Time, club: ID): [Match!]
  revGuess(userULID: ID!, matchULID: ID!): RevGuess
  revGuesses(matchULID: ID): [RevGuess!]
  manOfTheMatchVote(userULID: ID!, matchULID: ID!): ManOfTheMatchVote
  manOfTheMatchVotes(matchULID: ID): [ManOfTheMatchVote!]
}

type Mutation {
  logIn(username: String!, password: String!): Session
  logOut: Boolean!

  createUser(
    username: String!,
    email: String!,
    firstName: String!,
    lastName: String!,
    address1: String!,
    address2: String,
    city: String!,
    password: String!,
    province: String!,
    postalCode: String!,
    country: String!
  ): User!

  createRevGuess(
    userULID: ID!,
    matchULID: ID!,
    homeGoals: Int!,
    awayGoals: Int!,
    comment: String
  ): RevGuess!

  createManOfTheMatchVote(
    userULID: ID!,
    matchULID: ID!,
    firstPickULID: ID!,
    secondPickULID: ID,
    thirdPickULID: ID
  ): ManOfTheMatchVote

  initiatePasswordReset(
    email: String!
  ): Null

  resetPassword(
    email: String!,
    password: String!
    token: String!
  ): Boolean!
}
