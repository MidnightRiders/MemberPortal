.row
  .medium-8.columns
    %h1
      = image_tag(user.gravatar, class: 'gravatar', alt: 'gravatar')
      = user.first_name
      %strong=  user.last_name
      %small
        %br
        @#{user.username}
        - if can? :edit, user
          \(
          = link_to 'edit', edit_user_path(user)
          \)
    %h3.subheader
      %b Member since
      = user.member_since || "at least #{user.created_at.year}"
  .medium-4.columns.text-right
    - if can? :destroy, User
      = link_to user, class: 'button secondary tiny', :method => :delete, :data => { :confirm => "Are you sure you wish to destroy @#{user.username}?" }, title: 'Destroy' do
        = icon 'trash-o fa-lg fa-fw'

%hr
%h4
  Digital Membership history:
%table.expand
  %thead
    %tr
      %th.small-4 Year
      %th.small-4= current_user.leadership_or_admin? ? 'Privileges' : 'Board'
      - if can? :edit, user.current_membership
        %th.small-4 Actions
  %tbody
    - user.memberships.reverse.each do |membership|
      - membership = membership.decorate
      %tr{ class: ('highlight' if membership == user.current_membership)}
        %td
          %strong= membership.year
        %td
          = membership.list_privileges(false, current_user.leadership_or_admin?)
        - if can? :edit, user.current_membership
          %td
            - if membership == user.current_membership
              = link_to edit_user_membership_path(user,membership), class: "button expand tiny #{'split' if can?(:cancel_subscription, membership)}", title: 'Edit' do
                = icon 'pencil'
                Edit
                - if can? :cancel_subscription, membership
                  %span{ data: { dropdown: "dropdown-membership-#{membership.id}" } }
              - if can? :cancel_subscription, membership
                %ul.f-dropdown{ id: "dropdown-membership-#{membership.id}", data: { dropdown_content: true } }
                  %li
                    = link_to cancel_user_membership_path(user, membership), data: { method: :patch, confirm: 'Are you sure you wish to cancel your automatic renewal?' } do
                      Cancel Automatic Renewal

%hr
- if current_user==user
  .row
    .small-6.columns
      - if (lastmatch = revs.last_match) && can?(:vote, MotM, match_id: lastmatch.id)
        = lastmatch.decorate.mot_m_button('tiny secondary expand', true)
    .small-6.columns
      - if (nextmatch = revs.next_match) && can?(:vote, RevGuess, match_id: nextmatch.id)
        = nextmatch.decorate.rev_guess_button('tiny secondary expand', true)

.table
  .thead
    .tr
      .thd.text-center
        %h4 RevGuess Score:
      .thd.text-center
        %h4 Pick â€™Em Score:
  .tbody
    .tr
      .td.text-center
        %p
          = user.rev_guesses.where(matches: { season: Date.current.year }).score
          %small (#{user.rev_guesses.where(matches: { season: Date.current.year }).select{|r| r.match.complete? }.length} games)
      .td.text-center
        %p
          = user.pick_ems.where(matches: { season: Date.current.year }).score
          %small (#{user.pick_ems.where(matches: { season: Date.current.year }).select{|r| r.match.complete? }.length} games)

%hr

- if can? :manage, user
  .row
    .medium-4.large-2.columns
      %label Address:
    .medium-8.large-10.columns
      %p
        - if user.address.present?
          = user.address.gsub(/\n/,'<br>').html_safe
          %br
          #{user.city},
          = user.state
          = user.postal_code
        - else
          %em Not provided
  - if user.phone
    .row
      .medium-4.large-2.columns
        %label Phone:
      .medium-8.large-10.columns
        %p= number_to_phone(user.phone,delimiter:'.')
  .row
    .medium-4.large-2.columns
      %label Email:
    .medium-8.large-10.columns
      %p= link_to user.email, "mailto:#{user.email}"
  - if can? :grant_privileges, Membership
    .row
      .medium-4.large-2.columns
        %label Privileges:
      .medium-8.large-10.columns
        %p= user.list_current_privileges